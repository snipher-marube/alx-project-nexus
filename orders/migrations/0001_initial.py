# Generated by Django 5.2.4 on 2025-07-23 08:42

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='session key')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'cart',
                'verbose_name_plural': 'carts',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('number', models.CharField(editable=False, max_length=32, unique=True, verbose_name='order number')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Payment'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Failed'), ('on_hold', 'On Hold')], default='draft', max_length=20, verbose_name='status')),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('authorized', 'Authorized'), ('paid', 'Paid'), ('partially_refunded', 'Partially Refunded'), ('refunded', 'Refunded'), ('voided', 'Voided'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='payment status')),
                ('payment_method', models.CharField(blank=True, choices=[('credit_card', 'Credit Card'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer'), ('cod', 'Cash on Delivery'), ('wallet', 'Wallet'), ('mpesa', 'M-Pesa'), ('stripe', 'Stripe'), ('other', 'Other')], max_length=20, null=True, verbose_name='payment method')),
                ('payment_transaction_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='payment transaction ID')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='currency')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='subtotal')),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='tax amount')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='shipping cost')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='discount amount')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='total amount')),
                ('customer_notes', models.TextField(blank=True, verbose_name='customer notes')),
                ('admin_notes', models.TextField(blank=True, verbose_name='admin notes')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='paid at')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='cancelled at')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='company')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='address line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, verbose_name='address line 2')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state/province')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('country', models.CharField(max_length=100, verbose_name='country')),
                ('phone', models.CharField(max_length=30, verbose_name='phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='billing_address', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'billing address',
                'verbose_name_plural': 'billing addresses',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=100, verbose_name='SKU')),
                ('name', models.CharField(max_length=255, verbose_name='item name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='unit price')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='discount amount per unit')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='quantity')),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='tax amount')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.product', verbose_name='product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='products.productvariant', verbose_name='variant')),
            ],
            options={
                'verbose_name': 'order item',
                'verbose_name_plural': 'order items',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('pending', 'Pending Payment'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Failed'), ('on_hold', 'On Hold')], max_length=20, null=True, verbose_name='old status')),
                ('new_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Payment'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('failed', 'Failed'), ('on_hold', 'On Hold')], max_length=20, verbose_name='new status')),
                ('note', models.TextField(blank=True, verbose_name='note')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'order status history',
                'verbose_name_plural': 'order status histories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='company')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='address line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, verbose_name='address line 2')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('state', models.CharField(max_length=100, verbose_name='state/province')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('country', models.CharField(max_length=100, verbose_name='country')),
                ('phone', models.CharField(max_length=30, verbose_name='phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address', to='orders.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'shipping address',
                'verbose_name_plural': 'shipping addresses',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.cart', verbose_name='cart')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='products.product', verbose_name='product')),
                ('variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='products.productvariant', verbose_name='variant')),
            ],
            options={
                'verbose_name': 'cart item',
                'verbose_name_plural': 'cart items',
                'unique_together': {('cart', 'product', 'variant')},
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['number'], name='orders_orde_number_539d36_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='orders_orde_status_c6dd84_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status'], name='orders_orde_payment_bc131d_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user'], name='orders_orde_user_id_a87c6f_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='orders_orde_created_0e92de_idx'),
        ),
    ]
